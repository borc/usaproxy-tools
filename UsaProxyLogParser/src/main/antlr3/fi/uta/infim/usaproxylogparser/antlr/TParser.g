/*
 * UsaProxyLogParser - Java API for UsaProxy-fork logs
 *  Copyright (C) 2012 Teemu Pääkkönen - University of Tampere
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

// Parser for UsaProxy 2.0 log files using the provided lexer.
// Originally generated using the antlr maven archetype.

parser grammar TParser;

options {

    // Default language but name it anyway
    //
    language  = Java;

    // Produce an AST
    //
    output    = AST;

    // Use a superclass to implement all helper
    // methods, instance variables and overrides
    // of ANTLR default methods, such as error
    // handling.
    //
    superClass = AbstractTParser;

    // Use the vocabulary generated by the accompanying
    // lexer. Maven knows how to work out the relationship
    // between the lexer and parser and will build the 
    // lexer before the parser. It will also rebuild the
    // parser if the lexer changes.
    //
    tokenVocab = TLexer;
}

tokens {
	// Imaginary token for http traffic start entry lines
	//
	HTTPTRAFFICSTARTENTRY;
	
	// Imaginary token for event lines
	//
	PAGEEVENTENTRY;
	
	// Imaginary token for any log line
	//
	LOGENTRY;
	
	// Imaginary token for the whole log (root node)
	//
	USAPROXYLOG;
	
	// Imaginary token for a UsaProxy session
	//
	SESSION;
	
	// Imaginary token for HTTP Traffic data object
	//
	USAPROXYHTTPTRAFFIC;
	
	URL;
	
	USAPROXYHTTPTRAFFICINDEX;
	
	EVENT;
	
	SESSIONID;
}

// What package should the generated source exist in?
//
@header {

    package fi.uta.infim.usaproxylogparser.antlr;

	import java.util.HashMap;
	import java.util.ArrayList;
	
	import fi.uta.infim.usaproxylogparser.*;
	import fi.uta.infim.usaproxylogparser.antlr.AbstractTParser;
}

// Start rule. The whole log. Note that the input should contain at least one
// line of log. Else it won't be considered valid.
//
log returns [ UsaProxyLog log ]
	:	ll=loglines EOF { $log = new UsaProxyLog( $ll.entries ); }
	->	^(USAPROXYLOG)
	;

// Log entry terminates at a new line or at the end of file.
//
terminator
	:	NEWLINE | EOF
	;

loglines returns [ ArrayList< UsaProxyLogEntry > entries ]
	@init { $entries = new ArrayList< UsaProxyLogEntry >(); }
	:	(logline { $entries.add( $logline.entry ); })+
	;

// A single line of log
//
logline returns [ UsaProxyLogEntry entry ]
	:	logentry { $entry = $logentry.entry; } WS* terminator
	;

logentry returns [ UsaProxyLogEntry entry ]
	:	(eventline {$entry = $eventline.entry;} | httptrafficstartline {$entry = $httptrafficstartline.entry;})
	;

// Part of a log entry containing a single DOM event.
//
eventline returns [ UsaProxyPageEventEntry entry ]
	:	ip=IPADDRESS WS+ ts=TIMESTAMP WS+ index=httptrafficindex WS+ sid=sessionid WS+ ev=eventattribute attrs=attributes
		{ $entry = new UsaProxyPageEventEntry( $ip.text, $ts.text, $index.id, $sid.id, $ev.event, $attrs.attributeMap ); }
	->	^(PAGEEVENTENTRY) 
	;

attribvalue returns [String value]
	:	av=ATTRIBUTEVALUE? { $value = $av.text == null ? "" : $av.text; }
	;

attribute returns [String key, String value]
	:	WS+ ATTRIBUTENAME attribvalue { $key = $ATTRIBUTENAME.text; $value = $attribvalue.value; }
	->	^(ATTRIBUTENAME)
	;
	
attributes returns [HashMap<String, String> attributeMap]
	@init { $attributeMap = new HashMap< String, String >(); }
	:	(attribute { $attributeMap.put( $attribute.key, $attribute.value ); })* 
	;

eventattribute returns [String event]
	:	EVENTATTRIBUTENAME ATTRIBUTEVALUE { $event = $ATTRIBUTEVALUE.text; }
	->	^(EVENT ATTRIBUTEVALUE)
	;

urlattribute returns [String url]
	:	URLATTRIBUTENAME ATTRIBUTEVALUE { $url = $ATTRIBUTEVALUE.text; }
	->	^(URL ATTRIBUTEVALUE)
	;

httptrafficindex returns [String id]
	:	HTTPTRAFFICINDEXATTRIBUTENAME ATTRIBUTEVALUE { $id = $ATTRIBUTEVALUE.text; }
	->	^(USAPROXYHTTPTRAFFICINDEX ATTRIBUTEVALUE)
	;

sessionid returns [String id]
	:	SESSIONIDATTRIBUTENAME ATTRIBUTEVALUE { $id = $ATTRIBUTEVALUE.text; }
	->	^(SESSIONID ATTRIBUTEVALUE)
	;

// Part of a log entry. HTTP traffic start. Marks the event when a page is 
// loaded using the proxy.
//
httptrafficstartline returns [UsaProxyHTTPTrafficStartEntry entry]
	:	ip=IPADDRESS WS+ ts=TIMESTAMP WS+ HTTPTRAFFIC WS+ urlattribute WS+ id=httptrafficindex
		{ $entry = new UsaProxyHTTPTrafficStartEntry( $ip.text, $urlattribute.url, $id.id, $ts.text ); }
	->	^(HTTPTRAFFICSTARTENTRY)
	;
	